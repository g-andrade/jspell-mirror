#!/usr/bin/perl -s 
use strict;
use warnings;
use Lingua::Jspell 'any2str';

our ($comp, $tag, $tagrad,$p,$d);

$d ||= "port";

my $pt = Lingua::Jspell->new($d);

while(<>){
 chomp; 
 next if /^#/;
 next unless /\S/;
 my ($p,$c,$fs)=split(/\//,$_);
 for my $w ($pt->der($p)){
   if($comp){ print join("\n", (map {"$w $_"} $pt->featags($w))),"\n";}
   else     { print join("\n", (map {"$w ".any2str($_,'compact')}  $pt->fea($w))),"\n";}
 } 
}
__END__

$pt->setmode({flags => 1});     # show  feature "flag" in output

  chop;
  if($tag){  print join(" ",$pt->featags($_)). "\n"}
  elsif($tagrad){  print join(" ",$pt->featagsrad($_)). "\n"}
  elsif($p)    {  print Lingua::Jspell::any2str([$pt->fea($_)],"compact") . "\n"}
  else    {  print Lingua::Jspell::any2str([$pt->fea($_)],"f1") . "\n"}
}
