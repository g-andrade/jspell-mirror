#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use File::Basename;
use File::Spec::Functions;
## use Lingua::Jspell::DictManager;

my $libdir = catfile("[% PREFIX %]","lib","jspell");

my ($exists, $listall, $dicdir, $name, $mkname);
my $result = GetOptions("list-dics" => \$listall,
			"gen-yaml=s" => \$mkname,
			"install=s" => \$name,
			"dic-dir" => \$dicdir,
			"installed=s" => \$exists);

my @dics = map { basename($_) } <$libdir/*hash>;

if ($dicdir) {
  print "$libdir\n";
}

elsif ($listall) {
  if (@dics) {
    print(map "$_\n", @dics);
  }
}

elsif ($exists) {
  if (grep {$_ eq "$exists.hash"} @dics) {
    print "yes\n";
  } else {
    print "no\n";
    exit(1);
  }
}
elsif($name) {
## install_yaml_dic("$name.yaml") if -f "$name.yaml";
#  if (-f "$name.yaml" && -f "$name.dic" && -f "$name.aff") {
#  	install_dic({yaml=>"$name.yaml"},"$name.aff","$name.dic") if -f "$name.yaml" && -f "$name.dic" && -f "$name.aff";
#  }
#  else {
#	die "Some required files not found\n";
#  }
}
elsif($mkname) {
#  if(-f "$mkname.yaml") { die "$mkname.yaml' already exists\n"}
#  else { open(F,">$mkname.yaml") or die("Error: $!\n");
#    print F qq{
#META:
# IDS: [$mkname]
# TAG:
#   CAT:
#     card:
#     nc: [G, N, GR]
#     adj: [G, N, GR]
#     a_nc: [G, N, GR]
#     adv: [SUBCAT]
#     v:
#       T:
#         vpp: [G, P, N]
#         '-': [P, N]
#     '-': [C, G, P, N]
# PROPS:
#};
#     close F;
#    }
}

else {
  print " jspell-dict [--list-dics] | [--dic-dir] | [--installed=<dict>]\n";
}

=head1 NAME

jspell-dict - Command line tool to manage Jspell dictionaries

=head1 SYNOPSIS

  jspell-dict --list-dics

  jspell-dict --dir

  jspell-dict --installed

=head1 DESCRIPTION

This is a simple interface to manage Jspell dictionaries. Main flags are used to:

=over 4

=item C<--list-dics>

List installed dictionaries

=item C<--install=name>

install jspell dictionary from name.yaml, name.aff name.dic

=item C<--gen-yaml=name>

Generates the YAML skeleton

=item C<--dic-dir>

Shows the directory where dictionaries should be installed

=item C<--installed=E<lt>dictE<gt>>

Returns a boolean value (for the operating system) stating if some
dictionary is installed.

=back


=head1 SEE ALSO

jspell(1), jbuild(1), Lingua::Jspell(3) and perl(1)

=head1 AUTHOR

Alberto Manuel Brandão Simões, E<lt>ambs@cpan.orgE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2007-2008 by Projecto Natura

=cut

